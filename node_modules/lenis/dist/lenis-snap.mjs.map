{"version":3,"file":"lenis-snap.mjs","sources":["../../src/element.ts","../../src/uid.ts","../../src/index.ts","../../src/debounce.ts"],"sourcesContent":["function removeParentSticky(element: HTMLElement) {\r\n  const position = getComputedStyle(element).position\r\n\r\n  const isSticky = position === 'sticky'\r\n\r\n  if (isSticky) {\r\n    element.style.setProperty('position', 'static')\r\n    element.dataset.sticky = 'true'\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    removeParentSticky(element.offsetParent as HTMLElement)\r\n  }\r\n}\r\n\r\nfunction addParentSticky(element: HTMLElement) {\r\n  if (element?.dataset?.sticky === 'true') {\r\n    element.style.removeProperty('position')\r\n    delete element.dataset.sticky\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    addParentSticky(element.offsetParent as HTMLElement)\r\n  }\r\n}\r\n\r\nfunction offsetTop(element: HTMLElement, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent as HTMLElement, top)\r\n  }\r\n  return top\r\n}\r\n\r\nfunction offsetLeft(element: HTMLElement, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent as HTMLElement, left)\r\n  }\r\n  return left\r\n}\r\n\r\nfunction scrollTop(element: HTMLElement, accumulator = 0) {\r\n  const top = accumulator + element.scrollTop\r\n  if (element.offsetParent) {\r\n    return scrollTop(element.offsetParent as HTMLElement, top)\r\n  }\r\n  return top + window.scrollY\r\n}\r\n\r\nfunction scrollLeft(element: HTMLElement, accumulator = 0) {\r\n  const left = accumulator + element.scrollLeft\r\n  if (element.offsetParent) {\r\n    return scrollLeft(element.offsetParent as HTMLElement, left)\r\n  }\r\n  return left + window.scrollX\r\n}\r\n\r\nexport type SnapElementOptions = {\r\n  align?: string[]\r\n  ignoreSticky?: boolean\r\n  ignoreTransform?: boolean\r\n}\r\n\r\ntype Rect = {\r\n  top: number\r\n  left: number\r\n  width: number\r\n  height: number\r\n  x: number\r\n  y: number\r\n  bottom: number\r\n  right: number\r\n  element: HTMLElement\r\n}\r\n\r\nexport class SnapElement {\r\n  element: HTMLElement\r\n  options: SnapElementOptions\r\n  align: string[]\r\n  // @ts-ignore\r\n  rect: Rect = {}\r\n  wrapperResizeObserver: ResizeObserver\r\n  resizeObserver: ResizeObserver\r\n\r\n  constructor(\r\n    element: HTMLElement,\r\n    {\r\n      align = ['start'],\r\n      ignoreSticky = true,\r\n      ignoreTransform = false,\r\n    }: SnapElementOptions = {}\r\n  ) {\r\n    this.element = element\r\n\r\n    this.options = { align, ignoreSticky, ignoreTransform }\r\n\r\n    // this.ignoreSticky = ignoreSticky\r\n    // this.ignoreTransform = ignoreTransform\r\n\r\n    this.align = [align].flat()\r\n\r\n    // TODO: assing rect immediately\r\n\r\n    this.wrapperResizeObserver = new ResizeObserver(this.onWrapperResize)\r\n    this.wrapperResizeObserver.observe(document.body)\r\n    this.onWrapperResize()\r\n\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(this.element)\r\n    this.setRect({\r\n      width: this.element.offsetWidth,\r\n      height: this.element.offsetHeight,\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver.disconnect()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  setRect({\r\n    top,\r\n    left,\r\n    width,\r\n    height,\r\n    element,\r\n  }: {\r\n    top?: number\r\n    left?: number\r\n    width?: number\r\n    height?: number\r\n    element?: HTMLElement\r\n  } = {}) {\r\n    top = top ?? this.rect.top\r\n    left = left ?? this.rect.left\r\n    width = width ?? this.rect.width\r\n    height = height ?? this.rect.height\r\n    element = element ?? this.rect.element\r\n\r\n    if (\r\n      top === this.rect.top &&\r\n      left === this.rect.left &&\r\n      width === this.rect.width &&\r\n      height === this.rect.height &&\r\n      element === this.rect.element\r\n    )\r\n      return\r\n\r\n    this.rect.top = top\r\n    this.rect.y = top\r\n    this.rect.width = width\r\n    this.rect.height = height\r\n    this.rect.left = left\r\n    this.rect.x = left\r\n    this.rect.bottom = top + height\r\n    this.rect.right = left + width\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    let top, left\r\n\r\n    if (this.options.ignoreSticky) removeParentSticky(this.element)\r\n    if (this.options.ignoreTransform) {\r\n      top = offsetTop(this.element)\r\n      left = offsetLeft(this.element)\r\n    } else {\r\n      const rect = this.element.getBoundingClientRect()\r\n      top = rect.top + scrollTop(this.element)\r\n      left = rect.left + scrollLeft(this.element)\r\n    }\r\n    if (this.options.ignoreSticky) addParentSticky(this.element)\r\n\r\n    this.setRect({ top, left })\r\n  }\r\n\r\n  onResize = ([entry]: ResizeObserverEntry[]) => {\r\n    const width = entry.borderBoxSize[0].inlineSize\r\n    const height = entry.borderBoxSize[0].blockSize\r\n\r\n    this.setRect({ width, height })\r\n  }\r\n}\r\n","let index = 0\r\n\r\nexport type UID = number\r\n\r\nexport function uid(): UID {\r\n  return index++\r\n}\r\n","import Lenis, { type UserData } from 'lenis'\r\nimport { debounce } from './debounce'\r\nimport { SnapElement, SnapElementOptions } from './element'\r\nimport type { SnapItem, SnapOptions } from './types'\r\nimport { UID, uid } from './uid'\r\n\r\n// TODO:\r\n// - horizontal\r\n// - fix trackpad snapping too soon due to velocity (fuck Apple)\r\n// - fix wheel scrolling after limits (see console scroll to)\r\n// - fix touch scroll, do not snap when not released\r\n// - arrow, spacebar\r\n\r\n// Types\r\nexport * from './types'\r\n\r\ntype RequiredPick<T, F extends keyof T> = Omit<T, F> & Required<Pick<T, F>>\r\n\r\n/**\r\n * Snap class to handle the snap functionality\r\n *\r\n * @example\r\n * const snap = new Snap(lenis, {\r\n *   type: 'mandatory', // 'mandatory', 'proximity'\r\n *   lerp: 0.1,\r\n *   duration: 1,\r\n *   easing: (t) => t,\r\n *   onSnapStart: (snap) => {\r\n *     console.log('onSnapStart', snap)\r\n *   },\r\n *   onSnapComplete: (snap) => {\r\n *     console.log('onSnapComplete', snap)\r\n *   },\r\n * })\r\n *\r\n * snap.add(500) // snap at 500px\r\n *\r\n * const removeSnap = snap.add(500)\r\n *\r\n * if (someCondition) {\r\n *   removeSnap()\r\n * }\r\n */\r\nexport default class Snap {\r\n  options: RequiredPick<SnapOptions, 'type' | 'velocityThreshold' | 'debounce'>\r\n  elements = new Map<UID, SnapElement>()\r\n  snaps = new Map<UID, SnapItem>()\r\n  viewport = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  }\r\n  isStopped = false\r\n  onSnapDebounced: () => void\r\n\r\n  constructor(\r\n    private lenis: Lenis,\r\n    {\r\n      type = 'mandatory',\r\n      lerp,\r\n      easing,\r\n      duration,\r\n      velocityThreshold = 1,\r\n      debounce: debounceDelay = 0,\r\n      onSnapStart,\r\n      onSnapComplete,\r\n    }: SnapOptions = {}\r\n  ) {\r\n    this.options = {\r\n      type,\r\n      lerp,\r\n      easing,\r\n      duration,\r\n      velocityThreshold,\r\n      debounce: debounceDelay,\r\n      onSnapStart,\r\n      onSnapComplete,\r\n    }\r\n\r\n    this.onWindowResize()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.onSnapDebounced = debounce(this.onSnap, this.options.debounce)\r\n\r\n    this.lenis.on('scroll', this.onScroll)\r\n  }\r\n\r\n  /**\r\n   * Destroy the snap instance\r\n   */\r\n  destroy() {\r\n    this.lenis.off('scroll', this.onScroll)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.elements.forEach((element) => element.destroy())\r\n  }\r\n\r\n  /**\r\n   * Start the snap after it has been stopped\r\n   */\r\n  start() {\r\n    this.isStopped = false\r\n  }\r\n\r\n  /**\r\n   * Stop the snap\r\n   */\r\n  stop() {\r\n    this.isStopped = true\r\n  }\r\n\r\n  /**\r\n   * Add a snap to the snap instance\r\n   *\r\n   * @param value The value to snap to\r\n   * @param userData User data that will be forwarded through the snap event\r\n   * @returns Unsubscribe function\r\n   */\r\n  add(value: number, userData: UserData = {}) {\r\n    const id = uid()\r\n\r\n    this.snaps.set(id, { value, userData })\r\n\r\n    return () => this.remove(id)\r\n  }\r\n\r\n  /**\r\n   * Remove a snap from the snap instance\r\n   *\r\n   * @param id The snap id of the snap to remove\r\n   */\r\n  remove(id: UID) {\r\n    this.snaps.delete(id)\r\n  }\r\n\r\n  /**\r\n   * Add an element to the snap instance\r\n   *\r\n   * @param element The element to add\r\n   * @param options The options for the element\r\n   * @returns Unsubscribe function\r\n   */\r\n  addElement(element: HTMLElement, options = {} as SnapElementOptions) {\r\n    const id = uid()\r\n\r\n    this.elements.set(id, new SnapElement(element, options))\r\n\r\n    return () => this.removeElement(id)\r\n  }\r\n\r\n  /**\r\n   * Remove an element from the snap instance\r\n   *\r\n   * @param id The snap id of the snap element to remove\r\n   */\r\n  removeElement(id: UID) {\r\n    this.elements.delete(id)\r\n  }\r\n\r\n  private onWindowResize = () => {\r\n    this.viewport.width = window.innerWidth\r\n    this.viewport.height = window.innerHeight\r\n  }\r\n\r\n  private onScroll = ({\r\n    // scroll,\r\n    // limit,\r\n    lastVelocity,\r\n    velocity,\r\n    // isScrolling,\r\n    userData,\r\n  }: // isHorizontal,\r\n  Lenis) => {\r\n    if (this.isStopped) return\r\n\r\n    // return\r\n    const isDecelerating = Math.abs(lastVelocity) > Math.abs(velocity)\r\n    const isTurningBack =\r\n      Math.sign(lastVelocity) !== Math.sign(velocity) && velocity !== 0\r\n\r\n    if (\r\n      Math.abs(velocity) < this.options.velocityThreshold &&\r\n      // !isTouching &&\r\n      isDecelerating &&\r\n      !isTurningBack &&\r\n      userData?.initiator !== 'snap'\r\n    ) {\r\n      this.onSnapDebounced()\r\n    }\r\n  }\r\n\r\n  private onSnap = () => {\r\n    let { scroll, isHorizontal } = this.lenis\r\n    scroll = Math.ceil(this.lenis.scroll)\r\n\r\n    let snaps = [...this.snaps.values()] as SnapItem[]\r\n\r\n    this.elements.forEach(({ rect, align }) => {\r\n      let value: number | undefined\r\n\r\n      align.forEach((align) => {\r\n        if (align === 'start') {\r\n          value = rect.top\r\n        } else if (align === 'center') {\r\n          value = isHorizontal\r\n            ? rect.left + rect.width / 2 - this.viewport.width / 2\r\n            : rect.top + rect.height / 2 - this.viewport.height / 2\r\n        } else if (align === 'end') {\r\n          value = isHorizontal\r\n            ? rect.left + rect.width - this.viewport.width\r\n            : rect.top + rect.height - this.viewport.height\r\n        }\r\n\r\n        if (typeof value === 'number') {\r\n          snaps.push({ value: Math.ceil(value), userData: {} })\r\n        }\r\n      })\r\n    })\r\n\r\n    snaps = snaps.sort((a, b) => Math.abs(a.value) - Math.abs(b.value))\r\n\r\n    let prevSnap = snaps.findLast(({ value }) => value <= scroll)\r\n    if (prevSnap === undefined) prevSnap = snaps[0]\r\n    const distanceToPrevSnap = Math.abs(scroll - prevSnap.value)\r\n\r\n    let nextSnap = snaps.find(({ value }) => value >= scroll)\r\n    if (nextSnap === undefined) nextSnap = snaps[snaps.length - 1]\r\n    const distanceToNextSnap = Math.abs(scroll - nextSnap.value)\r\n\r\n    const snap = distanceToPrevSnap < distanceToNextSnap ? prevSnap : nextSnap\r\n\r\n    const distance = Math.abs(scroll - snap.value)\r\n\r\n    if (\r\n      this.options.type === 'mandatory' ||\r\n      (this.options.type === 'proximity' &&\r\n        distance <=\r\n          (isHorizontal\r\n            ? this.lenis.dimensions.width\r\n            : this.lenis.dimensions.height))\r\n    ) {\r\n      // this.__isScrolling = true\r\n      // this.onSnapStart?.(snap)\r\n\r\n      // console.log('scroll to')\r\n\r\n      this.lenis.scrollTo(snap.value, {\r\n        lerp: this.options.lerp,\r\n        easing: this.options.easing,\r\n        duration: this.options.duration,\r\n        userData: { initiator: 'snap' },\r\n        onStart: () => {\r\n          this.options.onSnapStart?.(snap)\r\n        },\r\n        onComplete: () => {\r\n          this.options.onSnapComplete?.(snap)\r\n        },\r\n      })\r\n    }\r\n\r\n    // console.timeEnd('scroll')\r\n  }\r\n}\r\n","export function debounce<CB extends (...args: any[]) => void>(\r\n  callback: CB,\r\n  delay: number\r\n) {\r\n  let timer: number | undefined\r\n  return function <T>(this: T, ...args: Parameters<typeof callback>) {\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n      timer = undefined\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n"],"names":["removeParentSticky","element","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","_a","removeProperty","offsetTop","accumulator","top","offsetLeft","left","scrollTop","window","scrollY","scrollLeft","scrollX","SnapElement","constructor","align","ignoreSticky","ignoreTransform","this","rect","onWrapperResize","options","getBoundingClientRect","setRect","onResize","entry","width","borderBoxSize","inlineSize","height","blockSize","flat","wrapperResizeObserver","ResizeObserver","observe","document","body","resizeObserver","offsetWidth","offsetHeight","destroy","disconnect","y","x","bottom","right","index","uid","Snap","lenis","type","lerp","easing","duration","velocityThreshold","debounce","debounceDelay","onSnapStart","onSnapComplete","elements","Map","snaps","viewport","innerWidth","innerHeight","isStopped","onWindowResize","onScroll","lastVelocity","velocity","userData","isDecelerating","Math","abs","isTurningBack","sign","initiator","onSnapDebounced","onSnap","scroll","isHorizontal","ceil","values","forEach","value","push","sort","a","b","prevSnap","findLast","undefined","distanceToPrevSnap","nextSnap","find","length","snap","distance","dimensions","scrollTo","onStart","_b","call","onComplete","addEventListener","callback","delay","timer","args","context","clearTimeout","setTimeout","apply","on","off","removeEventListener","start","stop","add","id","set","remove","delete","addElement","removeElement"],"mappings":"AAAA,SAASA,mBAAmBC,GAGI,WAFbC,iBAAiBD,GAASE,WAKzCF,EAAQG,MAAMC,YAAY,WAAY,UACtCJ,EAAQK,QAAQC,OAAS,QAGvBN,EAAQO,cACVR,mBAAmBC,EAAQO,aAE/B,CAEA,SAASC,gBAAgBR,SACU,UAAX,QAAlBS,EAAAT,aAAA,EAAAA,EAASK,eAAS,IAAAI,OAAA,EAAAA,EAAAH,UACpBN,EAAQG,MAAMO,eAAe,mBACtBV,EAAQK,QAAQC,QAGrBN,EAAQO,cACVC,gBAAgBR,EAAQO,aAE5B,CAEA,SAASI,UAAUX,EAAsBY,EAAc,GACrD,MAAMC,EAAMD,EAAcZ,EAAQW,UAClC,OAAIX,EAAQO,aACHI,UAAUX,EAAQO,aAA6BM,GAEjDA,CACT,CAEA,SAASC,WAAWd,EAAsBY,EAAc,GACtD,MAAMG,EAAOH,EAAcZ,EAAQc,WACnC,OAAId,EAAQO,aACHO,WAAWd,EAAQO,aAA6BQ,GAElDA,CACT,CAEA,SAASC,UAAUhB,EAAsBY,EAAc,GACrD,MAAMC,EAAMD,EAAcZ,EAAQgB,UAClC,OAAIhB,EAAQO,aACHS,UAAUhB,EAAQO,aAA6BM,GAEjDA,EAAMI,OAAOC,OACtB,CAEA,SAASC,WAAWnB,EAAsBY,EAAc,GACtD,MAAMG,EAAOH,EAAcZ,EAAQmB,WACnC,OAAInB,EAAQO,aACHY,WAAWnB,EAAQO,aAA6BQ,GAElDA,EAAOE,OAAOG,OACvB,OAoBaC,YASX,WAAAC,CACEtB,GACAuB,MACEA,EAAQ,CAAC,SAAQC,aACjBA,GAAe,EAAIC,gBACnBA,GAAkB,GACI,CAAA,GAV1BC,KAAIC,KAAS,GA8EbD,KAAeE,gBAAG,KAChB,IAAIf,EAAKE,EAGT,GADIW,KAAKG,QAAQL,cAAczB,mBAAmB2B,KAAK1B,SACnD0B,KAAKG,QAAQJ,gBACfZ,EAAMF,UAAUe,KAAK1B,SACrBe,EAAOD,WAAWY,KAAK1B,aAClB,CACL,MAAM2B,EAAOD,KAAK1B,QAAQ8B,wBAC1BjB,EAAMc,EAAKd,IAAMG,UAAUU,KAAK1B,SAChCe,EAAOY,EAAKZ,KAAOI,WAAWO,KAAK1B,QACpC,CACG0B,KAAKG,QAAQL,cAAchB,gBAAgBkB,KAAK1B,SAEpD0B,KAAKK,QAAQ,CAAElB,MAAKE,QAAO,EAG7BW,KAAAM,SAAW,EAAEC,MACX,MAAMC,EAAQD,EAAME,cAAc,GAAGC,WAC/BC,EAASJ,EAAME,cAAc,GAAGG,UAEtCZ,KAAKK,QAAQ,CAAEG,QAAOG,UAAS,EAvF/BX,KAAK1B,QAAUA,EAEf0B,KAAKG,QAAU,CAAEN,QAAOC,eAAcC,mBAKtCC,KAAKH,MAAQ,CAACA,GAAOgB,OAIrBb,KAAKc,sBAAwB,IAAIC,eAAef,KAAKE,iBACrDF,KAAKc,sBAAsBE,QAAQC,SAASC,MAC5ClB,KAAKE,kBAELF,KAAKmB,eAAiB,IAAIJ,eAAef,KAAKM,UAC9CN,KAAKmB,eAAeH,QAAQhB,KAAK1B,SACjC0B,KAAKK,QAAQ,CACXG,MAAOR,KAAK1B,QAAQ8C,YACpBT,OAAQX,KAAK1B,QAAQ+C,cAExB,CAED,OAAAC,GACEtB,KAAKc,sBAAsBS,aAC3BvB,KAAKmB,eAAeI,YACrB,CAED,OAAAlB,EAAQlB,IACNA,EAAGE,KACHA,EAAImB,MACJA,EAAKG,OACLA,EAAMrC,QACNA,GAOE,IACFa,EAAMA,QAAAA,EAAOa,KAAKC,KAAKd,IACvBE,EAAOA,QAAAA,EAAQW,KAAKC,KAAKZ,KACzBmB,EAAQA,QAAAA,EAASR,KAAKC,KAAKO,MAC3BG,EAASA,QAAAA,EAAUX,KAAKC,KAAKU,OAC7BrC,EAAUA,QAAAA,EAAW0B,KAAKC,KAAK3B,QAG7Ba,IAAQa,KAAKC,KAAKd,KAClBE,IAASW,KAAKC,KAAKZ,MACnBmB,IAAUR,KAAKC,KAAKO,OACpBG,IAAWX,KAAKC,KAAKU,QACrBrC,IAAY0B,KAAKC,KAAK3B,UAIxB0B,KAAKC,KAAKd,IAAMA,EAChBa,KAAKC,KAAKuB,EAAIrC,EACda,KAAKC,KAAKO,MAAQA,EAClBR,KAAKC,KAAKU,OAASA,EACnBX,KAAKC,KAAKZ,KAAOA,EACjBW,KAAKC,KAAKwB,EAAIpC,EACdW,KAAKC,KAAKyB,OAASvC,EAAMwB,EACzBX,KAAKC,KAAK0B,MAAQtC,EAAOmB,EAC1B,EC7JH,IAAIoB,EAAQ,WAIIC,MACd,OAAOD,GACT,CCqCc,MAAOE,KAWnB,WAAAlC,CACUmC,GACRC,KACEA,EAAO,YAAWC,KAClBA,EAAIC,OACJA,EAAMC,SACNA,EAAQC,kBACRA,EAAoB,EACpBC,SAAUC,EAAgB,EAACC,YAC3BA,EAAWC,eACXA,GACe,IAVTxC,KAAK+B,MAALA,EAVV/B,KAAAyC,SAAW,IAAIC,IACf1C,KAAA2C,MAAQ,IAAID,IACZ1C,KAAA4C,SAAW,CACTpC,MAAOjB,OAAOsD,WACdlC,OAAQpB,OAAOuD,aAEjB9C,KAAS+C,WAAG,EA0GJ/C,KAAcgD,eAAG,KACvBhD,KAAK4C,SAASpC,MAAQjB,OAAOsD,WAC7B7C,KAAK4C,SAASjC,OAASpB,OAAOuD,WAAW,EAGnC9C,KAAAiD,SAAW,EAGjBC,eACAC,WAEAC,eAGA,GAAIpD,KAAK+C,UAAW,OAGpB,MAAMM,EAAiBC,KAAKC,IAAIL,GAAgBI,KAAKC,IAAIJ,GACnDK,EACJF,KAAKG,KAAKP,KAAkBI,KAAKG,KAAKN,IAA0B,IAAbA,EAGnDG,KAAKC,IAAIJ,GAAYnD,KAAKG,QAAQiC,mBAElCiB,IACCG,GACuB,UAAxBJ,aAAA,EAAAA,EAAUM,YAEV1D,KAAK2D,iBACN,EAGK3D,KAAM4D,OAAG,KACf,IAAIC,OAAEA,EAAMC,aAAEA,GAAiB9D,KAAK+B,MACpC8B,EAASP,KAAKS,KAAK/D,KAAK+B,MAAM8B,QAE9B,IAAIlB,EAAQ,IAAI3C,KAAK2C,MAAMqB,UAE3BhE,KAAKyC,SAASwB,SAAQ,EAAGhE,OAAMJ,YAC7B,IAAIqE,EAEJrE,EAAMoE,SAASpE,IACC,UAAVA,EACFqE,EAAQjE,EAAKd,IACM,WAAVU,EACTqE,EAAQJ,EACJ7D,EAAKZ,KAAOY,EAAKO,MAAQ,EAAIR,KAAK4C,SAASpC,MAAQ,EACnDP,EAAKd,IAAMc,EAAKU,OAAS,EAAIX,KAAK4C,SAASjC,OAAS,EACrC,QAAVd,IACTqE,EAAQJ,EACJ7D,EAAKZ,KAAOY,EAAKO,MAAQR,KAAK4C,SAASpC,MACvCP,EAAKd,IAAMc,EAAKU,OAASX,KAAK4C,SAASjC,QAGxB,iBAAVuD,GACTvB,EAAMwB,KAAK,CAAED,MAAOZ,KAAKS,KAAKG,GAAQd,SAAU,CAAE,GACnD,GACD,IAGJT,EAAQA,EAAMyB,MAAK,CAACC,EAAGC,IAAMhB,KAAKC,IAAIc,EAAEH,OAASZ,KAAKC,IAAIe,EAAEJ,SAE5D,IAAIK,EAAW5B,EAAM6B,UAAS,EAAGN,WAAYA,GAASL,SACrCY,IAAbF,IAAwBA,EAAW5B,EAAM,IAC7C,MAAM+B,EAAqBpB,KAAKC,IAAIM,EAASU,EAASL,OAEtD,IAAIS,EAAWhC,EAAMiC,MAAK,EAAGV,WAAYA,GAASL,SACjCY,IAAbE,IAAwBA,EAAWhC,EAAMA,EAAMkC,OAAS,IAC5D,MAEMC,EAAOJ,EAFcpB,KAAKC,IAAIM,EAASc,EAAST,OAECK,EAAWI,EAE5DI,EAAWzB,KAAKC,IAAIM,EAASiB,EAAKZ,QAGhB,cAAtBlE,KAAKG,QAAQ6B,MACU,cAAtBhC,KAAKG,QAAQ6B,MACZ+C,IACGjB,EACG9D,KAAK+B,MAAMiD,WAAWxE,MACtBR,KAAK+B,MAAMiD,WAAWrE,UAO9BX,KAAK+B,MAAMkD,SAASH,EAAKZ,MAAO,CAC9BjC,KAAMjC,KAAKG,QAAQ8B,KACnBC,OAAQlC,KAAKG,QAAQ+B,OACrBC,SAAUnC,KAAKG,QAAQgC,SACvBiB,SAAU,CAAEM,UAAW,QACvBwB,QAAS,aACiB,QAAxBC,GAAApG,EAAAiB,KAAKG,SAAQoC,mBAAW,IAAA4C,GAAAA,EAAAC,KAAArG,EAAG+F,EAAK,EAElCO,WAAY,aACiB,QAA3BF,GAAApG,EAAAiB,KAAKG,SAAQqC,sBAAc,IAAA2C,GAAAA,EAAAC,KAAArG,EAAG+F,EAAK,GAGxC,EA7LD9E,KAAKG,QAAU,CACb6B,OACAC,OACAC,SACAC,WACAC,oBACAC,SAAUC,EACVC,cACAC,kBAGFxC,KAAKgD,iBACLzD,OAAO+F,iBAAiB,SAAUtF,KAAKgD,gBAAgB,GAEvDhD,KAAK2D,gBCjFO,SAAAtB,SACdkD,EACAC,GAEA,IAAIC,EACJ,OAAO,YAAyBC,GAC9B,IAAIC,EAAU3F,KACd4F,aAAaH,GACbA,EAAQI,YAAW,KACjBJ,OAAQhB,EACRc,EAASO,MAAMH,EAASD,EAAK,GAC5BF,EACL,CACF,CDoE2BnD,CAASrC,KAAK4D,OAAQ5D,KAAKG,QAAQkC,UAE1DrC,KAAK+B,MAAMgE,GAAG,SAAU/F,KAAKiD,SAC9B,CAKD,OAAA3B,GACEtB,KAAK+B,MAAMiE,IAAI,SAAUhG,KAAKiD,UAC9B1D,OAAO0G,oBAAoB,SAAUjG,KAAKgD,gBAAgB,GAC1DhD,KAAKyC,SAASwB,SAAS3F,GAAYA,EAAQgD,WAC5C,CAKD,KAAA4E,GACElG,KAAK+C,WAAY,CAClB,CAKD,IAAAoD,GACEnG,KAAK+C,WAAY,CAClB,CASD,GAAAqD,CAAIlC,EAAed,EAAqB,IACtC,MAAMiD,EAAKxE,MAIX,OAFA7B,KAAK2C,MAAM2D,IAAID,EAAI,CAAEnC,QAAOd,aAErB,IAAMpD,KAAKuG,OAAOF,EAC1B,CAOD,MAAAE,CAAOF,GACLrG,KAAK2C,MAAM6D,OAAOH,EACnB,CASD,UAAAI,CAAWnI,EAAsB6B,EAAU,IACzC,MAAMkG,EAAKxE,MAIX,OAFA7B,KAAKyC,SAAS6D,IAAID,EAAI,IAAI1G,YAAYrB,EAAS6B,IAExC,IAAMH,KAAK0G,cAAcL,EACjC,CAOD,aAAAK,CAAcL,GACZrG,KAAKyC,SAAS+D,OAAOH,EACtB"}