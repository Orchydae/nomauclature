{"version":3,"sources":["../packages/snap/src/debounce.ts","../packages/snap/src/element.ts","../packages/snap/src/uid.ts","../packages/snap/src/snap.ts","../packages/snap/browser.ts"],"sourcesContent":["export function debounce<CB extends (...args: any[]) => void>(\r\n  callback: CB,\r\n  delay: number\r\n) {\r\n  let timer: number | undefined\r\n  return function <T>(this: T, ...args: Parameters<typeof callback>) {\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n      timer = undefined\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","function removeParentSticky(element: HTMLElement) {\r\n  const position = getComputedStyle(element).position\r\n\r\n  const isSticky = position === 'sticky'\r\n\r\n  if (isSticky) {\r\n    element.style.setProperty('position', 'static')\r\n    element.dataset.sticky = 'true'\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    removeParentSticky(element.offsetParent as HTMLElement)\r\n  }\r\n}\r\n\r\nfunction addParentSticky(element: HTMLElement) {\r\n  if (element?.dataset?.sticky === 'true') {\r\n    element.style.removeProperty('position')\r\n    delete element.dataset.sticky\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    addParentSticky(element.offsetParent as HTMLElement)\r\n  }\r\n}\r\n\r\nfunction offsetTop(element: HTMLElement, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent as HTMLElement, top)\r\n  }\r\n  return top\r\n}\r\n\r\nfunction offsetLeft(element: HTMLElement, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent as HTMLElement, left)\r\n  }\r\n  return left\r\n}\r\n\r\nfunction scrollTop(element: HTMLElement, accumulator = 0) {\r\n  const top = accumulator + element.scrollTop\r\n  if (element.offsetParent) {\r\n    return scrollTop(element.offsetParent as HTMLElement, top)\r\n  }\r\n  return top + window.scrollY\r\n}\r\n\r\nfunction scrollLeft(element: HTMLElement, accumulator = 0) {\r\n  const left = accumulator + element.scrollLeft\r\n  if (element.offsetParent) {\r\n    return scrollLeft(element.offsetParent as HTMLElement, left)\r\n  }\r\n  return left + window.scrollX\r\n}\r\n\r\nexport type SnapElementOptions = {\r\n  align?: string[]\r\n  ignoreSticky?: boolean\r\n  ignoreTransform?: boolean\r\n}\r\n\r\ntype Rect = {\r\n  top: number\r\n  left: number\r\n  width: number\r\n  height: number\r\n  x: number\r\n  y: number\r\n  bottom: number\r\n  right: number\r\n  element: HTMLElement\r\n}\r\n\r\nexport class SnapElement {\r\n  element: HTMLElement\r\n  options: SnapElementOptions\r\n  align: string[]\r\n  // @ts-ignore\r\n  rect: Rect = {}\r\n  wrapperResizeObserver: ResizeObserver\r\n  resizeObserver: ResizeObserver\r\n\r\n  constructor(\r\n    element: HTMLElement,\r\n    {\r\n      align = ['start'],\r\n      ignoreSticky = true,\r\n      ignoreTransform = false,\r\n    }: SnapElementOptions = {}\r\n  ) {\r\n    this.element = element\r\n\r\n    this.options = { align, ignoreSticky, ignoreTransform }\r\n\r\n    // this.ignoreSticky = ignoreSticky\r\n    // this.ignoreTransform = ignoreTransform\r\n\r\n    this.align = [align].flat()\r\n\r\n    // TODO: assing rect immediately\r\n\r\n    this.wrapperResizeObserver = new ResizeObserver(this.onWrapperResize)\r\n    this.wrapperResizeObserver.observe(document.body)\r\n    this.onWrapperResize()\r\n\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(this.element)\r\n    this.setRect({\r\n      width: this.element.offsetWidth,\r\n      height: this.element.offsetHeight,\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver.disconnect()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  setRect({\r\n    top,\r\n    left,\r\n    width,\r\n    height,\r\n    element,\r\n  }: {\r\n    top?: number\r\n    left?: number\r\n    width?: number\r\n    height?: number\r\n    element?: HTMLElement\r\n  } = {}) {\r\n    top = top ?? this.rect.top\r\n    left = left ?? this.rect.left\r\n    width = width ?? this.rect.width\r\n    height = height ?? this.rect.height\r\n    element = element ?? this.rect.element\r\n\r\n    if (\r\n      top === this.rect.top &&\r\n      left === this.rect.left &&\r\n      width === this.rect.width &&\r\n      height === this.rect.height &&\r\n      element === this.rect.element\r\n    )\r\n      return\r\n\r\n    this.rect.top = top\r\n    this.rect.y = top\r\n    this.rect.width = width\r\n    this.rect.height = height\r\n    this.rect.left = left\r\n    this.rect.x = left\r\n    this.rect.bottom = top + height\r\n    this.rect.right = left + width\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    let top, left\r\n\r\n    if (this.options.ignoreSticky) removeParentSticky(this.element)\r\n    if (this.options.ignoreTransform) {\r\n      top = offsetTop(this.element)\r\n      left = offsetLeft(this.element)\r\n    } else {\r\n      const rect = this.element.getBoundingClientRect()\r\n      top = rect.top + scrollTop(this.element)\r\n      left = rect.left + scrollLeft(this.element)\r\n    }\r\n    if (this.options.ignoreSticky) addParentSticky(this.element)\r\n\r\n    this.setRect({ top, left })\r\n  }\r\n\r\n  onResize = ([entry]: ResizeObserverEntry[]) => {\r\n    if (!entry?.borderBoxSize[0]) return\r\n    const width = entry.borderBoxSize[0].inlineSize\r\n    const height = entry.borderBoxSize[0].blockSize\r\n\r\n    this.setRect({ width, height })\r\n  }\r\n}\r\n","let index = 0\r\n\r\nexport type UID = number\r\n\r\nexport function uid(): UID {\r\n  return index++\r\n}\r\n","import type Lenis from 'lenis'\r\nimport type { UserData } from 'lenis'\r\nimport { debounce } from './debounce'\r\nimport type { SnapElementOptions } from './element'\r\nimport { SnapElement } from './element'\r\nimport type { SnapItem, SnapOptions } from './types'\r\nimport type { UID } from './uid'\r\nimport { uid } from './uid'\r\n\r\n// TODO:\r\n// - horizontal\r\n// - fix trackpad snapping too soon due to velocity (fuck Apple)\r\n// - fix wheel scrolling after limits (see console scroll to)\r\n// - fix touch scroll, do not snap when not released\r\n// - arrow, spacebar\r\n\r\ntype RequiredPick<T, F extends keyof T> = Omit<T, F> & Required<Pick<T, F>>\r\n\r\n/**\r\n * Snap class to handle the snap functionality\r\n *\r\n * @example\r\n * const snap = new Snap(lenis, {\r\n *   type: 'mandatory', // 'mandatory', 'proximity'\r\n *   lerp: 0.1,\r\n *   duration: 1,\r\n *   easing: (t) => t,\r\n *   onSnapStart: (snap) => {\r\n *     console.log('onSnapStart', snap)\r\n *   },\r\n *   onSnapComplete: (snap) => {\r\n *     console.log('onSnapComplete', snap)\r\n *   },\r\n * })\r\n *\r\n * snap.add(500) // snap at 500px\r\n *\r\n * const removeSnap = snap.add(500)\r\n *\r\n * if (someCondition) {\r\n *   removeSnap()\r\n * }\r\n */\r\nexport class Snap {\r\n  options: RequiredPick<SnapOptions, 'type' | 'velocityThreshold' | 'debounce'>\r\n  elements = new Map<UID, SnapElement>()\r\n  snaps = new Map<UID, SnapItem>()\r\n  viewport = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  }\r\n  isStopped = false\r\n  onSnapDebounced: () => void\r\n\r\n  constructor(\r\n    private lenis: Lenis,\r\n    {\r\n      type = 'mandatory',\r\n      lerp,\r\n      easing,\r\n      duration,\r\n      velocityThreshold = 1,\r\n      debounce: debounceDelay = 0,\r\n      onSnapStart,\r\n      onSnapComplete,\r\n    }: SnapOptions = {}\r\n  ) {\r\n    this.options = {\r\n      type,\r\n      lerp,\r\n      easing,\r\n      duration,\r\n      velocityThreshold,\r\n      debounce: debounceDelay,\r\n      onSnapStart,\r\n      onSnapComplete,\r\n    }\r\n\r\n    this.onWindowResize()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.onSnapDebounced = debounce(this.onSnap, this.options.debounce)\r\n\r\n    this.lenis.on('scroll', this.onScroll)\r\n  }\r\n\r\n  /**\r\n   * Destroy the snap instance\r\n   */\r\n  destroy() {\r\n    this.lenis.off('scroll', this.onScroll)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.elements.forEach((element) => element.destroy())\r\n  }\r\n\r\n  /**\r\n   * Start the snap after it has been stopped\r\n   */\r\n  start() {\r\n    this.isStopped = false\r\n  }\r\n\r\n  /**\r\n   * Stop the snap\r\n   */\r\n  stop() {\r\n    this.isStopped = true\r\n  }\r\n\r\n  /**\r\n   * Add a snap to the snap instance\r\n   *\r\n   * @param value The value to snap to\r\n   * @param userData User data that will be forwarded through the snap event\r\n   * @returns Unsubscribe function\r\n   */\r\n  add(value: number, userData: UserData = {}) {\r\n    const id = uid()\r\n\r\n    this.snaps.set(id, { value, userData })\r\n\r\n    return () => this.remove(id)\r\n  }\r\n\r\n  /**\r\n   * Remove a snap from the snap instance\r\n   *\r\n   * @param id The snap id of the snap to remove\r\n   */\r\n  remove(id: UID) {\r\n    this.snaps.delete(id)\r\n  }\r\n\r\n  /**\r\n   * Add an element to the snap instance\r\n   *\r\n   * @param element The element to add\r\n   * @param options The options for the element\r\n   * @returns Unsubscribe function\r\n   */\r\n  addElement(element: HTMLElement, options = {} as SnapElementOptions) {\r\n    const id = uid()\r\n\r\n    this.elements.set(id, new SnapElement(element, options))\r\n\r\n    return () => this.removeElement(id)\r\n  }\r\n\r\n  /**\r\n   * Remove an element from the snap instance\r\n   *\r\n   * @param id The snap id of the snap element to remove\r\n   */\r\n  removeElement(id: UID) {\r\n    this.elements.delete(id)\r\n  }\r\n\r\n  private onWindowResize = () => {\r\n    this.viewport.width = window.innerWidth\r\n    this.viewport.height = window.innerHeight\r\n  }\r\n\r\n  private onScroll = ({\r\n    // scroll,\r\n    // limit,\r\n    lastVelocity,\r\n    velocity,\r\n    // isScrolling,\r\n    userData,\r\n  }: // isHorizontal,\r\n  Lenis) => {\r\n    if (this.isStopped) return\r\n\r\n    // return\r\n    const isDecelerating = Math.abs(lastVelocity) > Math.abs(velocity)\r\n    const isTurningBack =\r\n      Math.sign(lastVelocity) !== Math.sign(velocity) && velocity !== 0\r\n\r\n    if (\r\n      Math.abs(velocity) < this.options.velocityThreshold &&\r\n      // !isTouching &&\r\n      isDecelerating &&\r\n      !isTurningBack &&\r\n      userData?.initiator !== 'snap'\r\n    ) {\r\n      this.onSnapDebounced()\r\n    }\r\n  }\r\n\r\n  private onSnap = () => {\r\n    let { scroll, isHorizontal } = this.lenis\r\n    scroll = Math.ceil(this.lenis.scroll)\r\n\r\n    let snaps = [...this.snaps.values()] as SnapItem[]\r\n\r\n    this.elements.forEach(({ rect, align }) => {\r\n      let value: number | undefined\r\n\r\n      align.forEach((align) => {\r\n        if (align === 'start') {\r\n          value = rect.top\r\n        } else if (align === 'center') {\r\n          value = isHorizontal\r\n            ? rect.left + rect.width / 2 - this.viewport.width / 2\r\n            : rect.top + rect.height / 2 - this.viewport.height / 2\r\n        } else if (align === 'end') {\r\n          value = isHorizontal\r\n            ? rect.left + rect.width - this.viewport.width\r\n            : rect.top + rect.height - this.viewport.height\r\n        }\r\n\r\n        if (typeof value === 'number') {\r\n          snaps.push({ value: Math.ceil(value), userData: {} })\r\n        }\r\n      })\r\n    })\r\n\r\n    snaps = snaps.sort((a, b) => Math.abs(a.value) - Math.abs(b.value))\r\n\r\n    let prevSnap = snaps.findLast(({ value }) => value <= scroll)\r\n    if (prevSnap === undefined) prevSnap = snaps[0]!\r\n    const distanceToPrevSnap = Math.abs(scroll - prevSnap.value)\r\n\r\n    let nextSnap = snaps.find(({ value }) => value >= scroll)\r\n    if (nextSnap === undefined) nextSnap = snaps[snaps.length - 1]!\r\n    const distanceToNextSnap = Math.abs(scroll - nextSnap.value)\r\n\r\n    const snap = distanceToPrevSnap < distanceToNextSnap ? prevSnap : nextSnap\r\n\r\n    const distance = Math.abs(scroll - snap.value)\r\n\r\n    if (\r\n      this.options.type === 'mandatory' ||\r\n      (this.options.type === 'proximity' &&\r\n        distance <=\r\n          (isHorizontal\r\n            ? this.lenis.dimensions.width\r\n            : this.lenis.dimensions.height))\r\n    ) {\r\n      // this.__isScrolling = true\r\n      // this.onSnapStart?.(snap)\r\n\r\n      // console.log('scroll to')\r\n\r\n      this.lenis.scrollTo(snap.value, {\r\n        lerp: this.options.lerp,\r\n        easing: this.options.easing,\r\n        duration: this.options.duration,\r\n        userData: { initiator: 'snap' },\r\n        onStart: () => {\r\n          this.options.onSnapStart?.(snap)\r\n        },\r\n        onComplete: () => {\r\n          this.options.onSnapComplete?.(snap)\r\n        },\r\n      })\r\n    }\r\n\r\n    // console.timeEnd('scroll')\r\n  }\r\n}\r\n","// This file serves as an entry point for the package\r\nimport { Snap } from './src/snap'\r\nglobalThis.Snap = Snap\r\n"],"mappings":"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","names":["debounce","callback","delay","timer","args","context","removeParentSticky","element","addParentSticky","offsetTop","accumulator","top","offsetLeft","left","scrollTop","scrollLeft","SnapElement","align","ignoreSticky","ignoreTransform","width","height","rect","entry","index","uid","Snap","lenis","type","lerp","easing","duration","velocityThreshold","debounceDelay","onSnapStart","onSnapComplete","debounce","element","value","userData","id","uid","options","SnapElement","lastVelocity","velocity","isDecelerating","isTurningBack","scroll","isHorizontal","snaps","rect","align","a","b","prevSnap","distanceToPrevSnap","nextSnap","distanceToNextSnap","snap","distance","Snap"]}